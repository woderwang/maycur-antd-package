// mixins for button
// ------------------------
.button-size(@height; @padding; @font-size; @border-radius) {
  padding: @padding;
  font-size: @font-size;
  border-radius: @border-radius;
  height: @height;
}

.button-disabled(@bg:@btn-disable-bg, @bor:@btn-disable-border,@color:@btn-disable-color) {
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      .button-color(@color; @bg; @bor);
      text-shadow: none;
      box-shadow: none;
    }
  }
}

.button-text-disabled(@color) {
  &.disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      color:@color;
      background-color:transparent;
      border:none;
      // text-shadow: none;
      // box-shadow: none;
    }
  }
}

.button-variant-primary(@color; @background) {
  .button-color(@color; @mk-color-middle;  @mk-color-middle);
  text-shadow: 0 -1px 0 rgba(0, 0, 0, .12);
  box-shadow: 0 2px 0 rgba(0, 0, 0, .035);

  &:hover,
  &:focus {
    .button-color(@color; ~`colorPalette("@{background}", 5)`; ~`colorPalette("@{background}", 5)`);
  }

  &:active,
  &.active {
    .button-color(@color; ~`colorPalette("@{background}", 7)`; ~`colorPalette("@{background}", 7)`);
  }

  .button-disabled(@mk-color-disabled; transparent ; #fff );
}

.button-variant-other(@color; @background; @border; @disabled-color:@btn-disable-color; @disabled-background:@btn-disable-bg; @disabled-border:@btn-disable-border) {
  .button-color(@color; @background; @border);

  &:hover,
  &:focus {
    .button-color(@primary-5; @background; @primary-5);
  }

  &:active,
  &.active {
    .button-color(@primary-7; @background; @primary-7);
  }

  .button-disabled(@disabled-background; @disabled-border; @disabled-color);
}

.button-variant-danger(@color; @background; @border) {
  .button-color(@color; @background; @border);

  &:hover {
    .button-color(@btn-primary-color; ~`colorPalette("@{color}", 5)`; ~`colorPalette("@{color}", 5)`);
  }

  &:focus {
    .button-color(~`colorPalette("@{color}", 5)`; transparent; ~`colorPalette("@{color}", 5)`);
  }

  &:active,
  &.active {
    .button-color(@btn-primary-color; ~`colorPalette("@{color}", 7)`; ~`colorPalette("@{color}", 7)`);
  }

  .button-disabled();
}

.button-variant-gray(@color; @background; @border) {
  .button-color(@color; @background; @border);

  &:hover {
    .button-color(@mk-color-middle; @mk-btn-gray-hover-bg; @mk-btn-gray-hover-bg);
  }

  &:focus {
    .button-color(~`colorPalette("@{color}", 5)`; @mk-btn-gray-hover-bg; @mk-btn-gray-hover-bg);
    transition: all 1s @ease-in-out;
  }

  &:active,
  &.active {
    .button-color(~`colorPalette("@{color}", 7)`; @mk-btn-gray-hover-bg;@mk-btn-gray-hover-bg);
  }
  
  .button-disabled(@mk-btn-gray-disabled, @mk-btn-gray-disabled, @mk-color-disabled);
}

.button-variant-text(@color; @hover-color; @disabled-color) {

  color:@color;
  height:auto;
  padding:0;
  box-shadow:none;
  border:none;

  &:hover {
    color:@hover-color;
  }

  &:focus {
    color:@hover-color;
  }

  &:active,
  &.active {
    color:@hover-color;
  }

  .button-text-disabled(@disabled-color);
}

.button-variant-ghost(@color) {
  .button-color(@color; transparent; @color);
  text-shadow: none;

  &:hover,
  &:focus {
    .button-color(~`colorPalette("@{color}", 5)`; transparent; ~`colorPalette("@{color}", 5)`);
  }

  &:active,
  &.active {
    .button-color(~`colorPalette("@{color}", 7)`; transparent; ~`colorPalette("@{color}", 7)`);
  }

  .button-disabled();
}

.button-color(@color; @background; @border) {
  color: @color;
  background-color: @background;
  border-color: @border;
  // a inside Button which only work in Chrome
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color: currentColor;
    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background: transparent;
    }
  }
}

.button-group-base(@btnClassName) {
  position: relative;
  display: inline-block;
  > .@{btnClassName},
  > span > .@{btnClassName} {
    position: relative;
    line-height: @btn-height-base - 2px;

    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index: 2;
    }

    &:disabled {
      z-index: 0;
    }
  }

  // size
  &-lg > .@{btnClassName},
  &-lg > span > .@{btnClassName} {
    .button-size(@btn-height-lg; @btn-padding-lg; @btn-font-size-lg; 0);
    line-height: @btn-height-lg - 2px;
  }

  &-sm > .@{btnClassName},
  &-sm > span > .@{btnClassName} {
    .button-size(@btn-height-sm; @btn-padding-sm; @font-size-base; 0);
    line-height: @btn-height-sm - 2px;
    > .@{iconfont-css-prefix} {
      font-size: @font-size-base;
    }
  }
}

// Base styles of buttons
// --------------------------------------------------
.btn() {
  display: inline-block;
  font-weight: @btn-font-weight;
  text-align: center;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: @border-width-base @border-style-base transparent;
  white-space: nowrap;
  .button-size(@btn-height-base; @btn-padding-base; @font-size-base;0);
  user-select: none;
  transition: all .3s @ease-in-out;
  position: relative;
  box-shadow: 0 2px 0 rgba(0, 0, 0, .015);

  > .@{iconfont-css-prefix} {
    line-height: 1;
  }

  &,
  &:active,
  &:focus {
    outline: 0;
  }

  &:not([disabled]):hover {
    text-decoration: none;
  }

  &:not([disabled]):active {
    outline: 0;
    transition: none;
    box-shadow: none;
  }

  &.disabled,
  &[disabled] {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }

  &-lg {
    .button-size(@btn-height-lg; @btn-padding-lg; @btn-font-size-lg;0);
  }

  &-sm {
    .button-size(@btn-height-sm; @btn-padding-sm; @btn-font-size-sm;0);
  }
}

// primary button style
.btn-primary() {
  .button-variant-primary(@btn-primary-color; @btn-primary-bg);
}

// default button style
.btn-default() {
  .button-variant-other(@btn-default-color; @btn-default-bg; @btn-default-border);
  &:hover,
  &:focus,
  &:active,
  &.active {
    background: @btn-default-bg;
    text-decoration: none;
  }
}
.btn-mk-default(){
  .button-variant-other(@mk-color; @btn-default-bg; @btn-default-border; @mk-color-disabled; @mk-btn-disabled-bg);
  &:hover,
  &:focus,
  &:active,
  &.active {
    background: @btn-default-bg;
    text-decoration: none;
  }
}

// ghost button style
.btn-ghost() {
  .button-variant-other(@btn-ghost-color, @btn-ghost-bg, @btn-ghost-border);
}

// dashed button style
.btn-dashed() {
  .button-variant-other(@btn-default-color, @btn-default-bg, @btn-default-border);
  border-style: dashed;
}

.btn-mk-dashed(){
  .button-variant-other(@mk-color, @btn-default-bg, @btn-default-border, @mk-color-disabled, @mk-btn-disabled-bg);
  border-style: dashed;
}

// danger button style
.btn-danger() {
  .button-variant-danger(@btn-danger-color, @btn-danger-bg, @btn-danger-border);
}

.btn-gray(){
  .button-variant-gray(@mk-color, @mk-btn-gray-bg, @mk-btn-gray-bg);
}

.btn-text(){
  .button-variant-text(@mk-color, @mk-btn-text-hover-color, @mk-color-disabled);
}

.btn-text-danger(){
  .button-variant-text(@mk-text-danger,@mk-text-danger-hover, @mk-text-danger-disabled);
}

// circle button: the content only contains icon
.btn-circle(@btnClassName: btn) {
  .square(@btn-circle-size);
  .button-size(@btn-circle-size; 0; @font-size-base + 2px; 50%);

  &.@{btnClassName}-lg {
    .square(@btn-circle-size-lg);
    .button-size(@btn-circle-size-lg; 0; @btn-font-size-lg + 2px; 50%);
  }

  &.@{btnClassName}-sm {
    .square(@btn-circle-size-sm);
    .button-size(@btn-circle-size-sm; 0; @font-size-base; 50%);
  }
}

// Horizontal button groups styl
// --------------------------------------------------
.btn-group(@btnClassName: btn) {
  .button-group-base(@btnClassName);

  .@{btnClassName} + .@{btnClassName},
  .@{btnClassName} + &,
  span + .@{btnClassName},
  .@{btnClassName} + span,
  > span + span,
  & + .@{btnClassName},
  & + & {
    margin-left: -1px;
  }

  .@{btnClassName}-primary + .@{btnClassName}:not(.@{btnClassName}-primary):not([disabled]) {
    border-left-color: transparent;
  }

  .@{btnClassName} {
    border-radius: 0;
  }

  > .@{btnClassName}:first-child,
  > span:first-child > .@{btnClassName} {
    margin-left: 0;
  }
  > .@{btnClassName}:only-child {
    border-radius: @btn-border-radius-base;
  }
  > span:only-child > .@{btnClassName} {
    border-radius: @btn-border-radius-base;
  }

  &-sm {
    > .@{btnClassName}:only-child {
      border-radius: @btn-border-radius-sm;
    }
    > span:only-child > .@{btnClassName} {
      border-radius: @btn-border-radius-sm;
    }
  }

  & > & {
    float: left;
  }

  & > &:not(:first-child):not(:last-child) > .@{btnClassName} {
    border-radius: 0;
  }

  & > &:first-child:not(:last-child) {
    > .@{btnClassName}:last-child {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
      padding-right: 8px;
    }
  }

  & > &:last-child:not(:first-child) > .@{btnClassName}:first-child {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    padding-left: 8px;
  }
}
